from mysql.connector import Error
from sqlconnec import connect
from tabulate import tabulate
from printcolor import *


def option_1():

    cve_id = input("Enter CVE-ID (Ex: CVE-2024-1234): ")

    conn = connect()
    cursor = conn.cursor()

    try:
        cursor.execute("SELECT * FROM CVE_ID WHERE ID = %s", (cve_id,))
        result = cursor.fetchone()

        if result:
            print("--------------------------")
            print_green("\nCVE Information:")
            print(f"CVE-ID: {result[0]}")
            print(f"Name: {result[1]}")
            print_green("\nAdditional Information:")
            cursor.execute("SELECT * FROM Description WHERE ID = %s", (cve_id,))
            description = cursor.fetchone()
            if description:
                print(f"Description: {description[1]}")
                print(f"Recorded References: {description[2]}")
                print(f"Recorded Breaches: {description[3]}")
            cursor.execute("SELECT * FROM Proof_Of_Exploit WHERE ID = %s", (cve_id,))
            exploit = cursor.fetchone()
            if exploit:
                print_green("\nProof of Exploit:")
                print(f"Exploit Demo: {exploit[1]}")
                print(f"Author: {exploit[2]}")
                print(f"Code Implementation: {exploit[3]}")
            cursor.execute("SELECT * FROM CVE_Scores WHERE ID = %s", (cve_id,))
            scores = cursor.fetchone()
            if scores:
                print_green("\nCVE Scores:")
                print(f"Base Score: {scores[1]}")
                print(f"Method of Entry: {scores[2]}")
                print(f"Attack Vector: {scores[3]}")
            cursor.execute("SELECT * FROM Sub_Scores WHERE ID = %s", (cve_id,))
            sub_scores = cursor.fetchone()
            if sub_scores:
                print_green("\nSub Scores:")
                print(f"Attack Vector: {sub_scores[1]}")
                print(f"Attack Complexity: {sub_scores[2]}")
                print(f"Privilege Required: {sub_scores[3]}")
                print(f"User Interaction: {sub_scores[4]}")
                print(f"Scope: {sub_scores[5]}")
                print(f"Confidentiality: {sub_scores[6]}")
                print(f"Integrity: {sub_scores[7]}")
                print(f"Availability: {sub_scores[8]}\n\n")
        else:
            print_red(f"\nCVE {cve_id} not found\n")

    except Error as e:
        print_red("Error in searching CVE_ID:", e)

    finally:
        if conn.is_connected():
            cursor.close()
            conn.close()


def return_to_menu():
    print("Returning to Menu...\n\n")
    return True


def display_menu():
    print("Choose your search option")
    print("1. Find CVE-ID")
    print("0. Exit")


def findcve_menu():
    menu_options = {
        "1": option_1,
        "0": return_to_menu,
    }

    while True:
        display_menu()
        choice = input("Enter your choice (1 or 0 to exit): ")

        if choice in menu_options:
            should_exit = menu_options[choice]()
            if should_exit:
                break
        else:
            print_red("Invalid choice. Please choose a number from 0 to 1.\n")
