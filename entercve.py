from jsonreader import import_data
from sqlconnec import *


def option_1():
    print("You chose Option 1")

    str_cve_id = input("Enter the CVE-ID you wish to add: ")

    print("Enter the new values for the following fields:")
    columns = [
        "ID",
        "Name",
        "Method_of_entry",
        "Attack_Vector_v3",
        "text_description",
        "recorded_references",
        "recorded_breaches",
        "Exploit_demo",
        "Author",
        "Code_implementation",
        "Attack_Complexity",
        "Privilege_Required",
        "User_Interaction",
        "Scope",
        "Confidentiality",
        "Integrity",
        "Availability",
        "Medium",
        "OS",
        "Version",
        "CVSS",
    ]
    updates = {}
    for column in columns:
        value = input(f"{column}: ")
        if value:
            updates[column] = value

    str_name = updates.get("Name", "")
    str_method_of_entry = updates.get("Method_of_entry", "")
    str_attack_vector_v3 = updates.get("Attack_Vector_v3", "")
    str_text_description = updates.get("text_description", "")
    str_recorded_references = updates.get("recorded_references", "")
    str_recorded_breaches = updates.get("recorded_breaches", "")
    str_exploit_demo = updates.get("Exploit_demo", "")
    str_author = updates.get("Author", "")
    str_code_implementation = updates.get("Code_implementation", "")
    str_attack_complexity = updates.get("Attack_Complexity", "")
    str_privilege_required = updates.get("Privilege_Required", "")
    str_user_interaction = updates.get("User_Interaction", "")
    str_scope = updates.get("Scope", "")
    str_confidentiality = updates.get("Confidentiality", "")
    str_integrity = updates.get("Integrity", "")
    str_availability = updates.get("Availability", "")
    str_medium = updates.get("Medium", "")
    str_cve_os = updates.get("OS", "")
    str_version = updates.get("Version", "")
    str_cvss = updates.get("CVSS", "")

    insert_to_appliance(str_name, str_medium, str_cve_os, str_version)
    insert_to_cveid(str_cve_id, str_name)
    insert_to_description(str_cve_id, str_text_description, str_recorded_references, str_recorded_breaches)
    insert_to_proof_of_exploit(str_cve_id, str_exploit_demo, str_author, str_code_implementation)
    insert_to_scores(str_cve_id, str_attack_vector_v3, str_cvss)
    insert_to_sub_scores(str_attack_vector_v3, str_attack_complexity, str_privilege_required, str_user_interaction, str_scope,
                         str_confidentiality, str_integrity, str_availability)


def option_2():
    print("You chose Option 2")
    import_data()


def return_to_menu():
    print("Returning to Menu...")
    return True


def display_menu():
    print("Choose your addition option")
    print("1. Manually Enter CVE")
    print("2. Import From *.JSON")
    print("0. Exit")


def entercve_menu():
    menu_options = {
        "1": option_1,
        "2": option_2,
        "0": return_to_menu,
    }

    while True:
        display_menu()
        choice = input("Enter your choice (1-2, 0 to exit): ")

        if choice in menu_options:
            should_exit = menu_options[choice]()
            if should_exit:
                break
        else:
            print("Invalid choice. Please choose a number from 0 to 2.")
